name: ci
on: workflow_dispatch
jobs:
  lint-black:
    name: lint (black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install black
      - run: black --check --diff modin/ asv_bench/benchmarks scripts/doc_checker.py

  lint-pydocstyle:
    name: lint (pydocstyle)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install pytest pytest-cov pydocstyle numpydoc==1.1.0 xgboost
      - run: pytest scripts/test
      - run: pip install -e .[all]
      - run: |
          python scripts/doc_checker.py --add-ignore=D101,D102,D103,D105 --disable-numpydoc \
            modin/pandas/dataframe.py modin/pandas/series.py \
            modin/pandas/groupby.py \
            modin/pandas/series_utils.py modin/pandas/general.py \
            modin/pandas/plotting.py modin/pandas/utils.py \
            modin/pandas/iterator.py modin/pandas/indexing.py \
      - run: python scripts/doc_checker.py modin/core/dataframe
      - run: python scripts/doc_checker.py modin/core/execution/dask
      - run: |
          python scripts/doc_checker.py \
            modin/pandas/accessor.py modin/pandas/general.py \
            modin/pandas/groupby.py modin/pandas/indexing.py \
            modin/pandas/iterator.py modin/pandas/plotting.py \
            modin/pandas/series_utils.py modin/pandas/utils.py \
            modin/pandas/base.py \
            modin/pandas/io.py \
            asv_bench/benchmarks/utils \
            asv_bench/benchmarks/__init__.py asv_bench/benchmarks/io/__init__.py \
            asv_bench/benchmarks/scalability/__init__.py \
            modin/core/io \
            modin/experimental/core/execution/ray/implementations/pandas_on_ray \
            modin/experimental/core/execution/ray/implementations/pyarrow_on_ray \
            modin/pandas/series.py \
            modin/core/execution/python \
            modin/pandas/dataframe.py \
            modin/config/__init__.py \
            modin/config/__main__.py \
            modin/config/envvars.py \
            modin/config/pubsub.py
      - run: python scripts/doc_checker.py modin/distributed
      - run: python scripts/doc_checker.py modin/utils.py
      - run: python scripts/doc_checker.py modin/experimental/sklearn
      - run: |
          python scripts/doc_checker.py modin/experimental/xgboost/__init__.py \
            modin/experimental/xgboost/utils.py modin/experimental/xgboost/xgboost.py \
            modin/experimental/xgboost/xgboost_ray.py
      - run: python scripts/doc_checker.py modin/core/execution/ray
      - run: |
          python scripts/doc_checker.py modin/core/execution/dispatching/factories/factories.py \
            modin/core/execution/dispatching/factories/dispatcher.py                            \
      - run: python scripts/doc_checker.py scripts/doc_checker.py
      - run: |
          python scripts/doc_checker.py modin/experimental/pandas/io.py \
            modin/experimental/pandas/numpy_wrap.py modin/experimental/pandas/__init__.py
      - run: python scripts/doc_checker.py modin/core/storage_formats/base
      - run: python scripts/doc_checker.py modin/core/storage_formats/pyarrow
      - run: python scripts/doc_checker.py modin/core/storage_formats/pandas
      - run: |
          python scripts/doc_checker.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/dataframe \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/io \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/partitioning \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/calcite_algebra.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/calcite_builder.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/calcite_serializer.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/df_algebra.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/expr.py \
            modin/experimental/core/execution/native/implementations/omnisci_on_native/omnisci_worker.py \
      - run: python scripts/doc_checker.py modin/experimental/core/storage_formats/omnisci

  lint-flake8:
    name: lint (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - run: pip install flake8 flake8-print
      - run: flake8 --enable=T modin/ asv_bench/benchmarks scripts/doc_checker.py

  test-api:
    runs-on: ubuntu-latest
    name: test api
    defaults:
      run:
        # `shell: bash -l {0}` - special way to activate modin environment
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: modin
          environment-file: environment-dev.yml
          python-version: 3.7
          channel-priority: strict
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Conda environment
        run: |
          conda info
          conda list
      - run: sudo apt update && sudo apt install -y libhdf5-dev
      - name: Api tests
        run: python -m pytest modin/pandas/test/test_api.py
      - name: Executions Api tests
        run: python -m pytest modin/test/test_executions_api.py

  test-headers:
    runs-on: ubuntu-latest
    name: test-headers
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: modin
          environment-file: environment-dev.yml
          python-version: 3.7
          channel-priority: strict
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Conda environment
        run: |
          conda info
          conda list
      - name: Headers tests
        run: python -m pytest modin/test/test_headers.py

  test-clean-install-windows:
    needs: [lint-flake8, lint-black, test-api, test-headers ]
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: bash -l {0}
    name: test-clean-install-windows
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7.x"
          architecture: "x64"
      - name: Clean install and run
        run: |
          python -m pip install -e .[all]
          MODIN_ENGINE=dask python -c "import modin.pandas as pd; print(pd.DataFrame([1,2,3]))"
          MODIN_ENGINE=ray python -c "import modin.pandas as pd; print(pd.DataFrame([1,2,3]))"
  
  test-windows:
    needs: [lint-flake8, lint-black, test-api, test-headers]
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]
        engine: ["ray", "dask"]
        test-task:
          - modin/pandas/test/dataframe/test_binary.py
          - modin/pandas/test/dataframe/test_default.py
          - modin/pandas/test/dataframe/test_indexing.py
          - modin/pandas/test/dataframe/test_iter.py
          - modin/pandas/test/dataframe/test_join_sort.py
          - modin/pandas/test/dataframe/test_map_metadata.py
          - modin/pandas/test/dataframe/test_reduction.py
          - modin/pandas/test/dataframe/test_udf.py
          - modin/pandas/test/dataframe/test_window.py
          - modin/pandas/test/dataframe/test_pickle.py
          - modin/pandas/test/test_series.py
          - modin/pandas/test/test_rolling.py
          - modin/pandas/test/test_concat.py
          - modin/pandas/test/test_groupby.py
          - modin/pandas/test/test_reshape.py
          - modin/pandas/test/test_general.py
          - modin/pandas/test/test_io.py
    env:
      MODIN_ENGINE: ${{matrix.engine}}
      MODIN_MEMORY: 1000000000
    name: test-windows
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: modin
          environment-file: environment-dev.yml
          python-version: ${{matrix.python-version}}
          channel-priority: strict
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          auto-update-conda: true # this enable `use-only-tar-bz2` feature on Windows
      - name: Conda environment
        run: |
          conda info
          conda list
      - run: python -m pytest ${{matrix.test-task}}
        if: matrix.test-task != 'modin/pandas/test/test_io.py'
      - timeout-minutes: 30
        run: python -m pytest modin/pandas/test/test_io.py --verbose
        if: matrix.test-task == 'modin/pandas/test/test_io.py'
      - run: choco install codecov
      - run: codecov -f ./coverage.xml
